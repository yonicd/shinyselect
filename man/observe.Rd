% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/observe.R
\name{observe_contains}
\alias{observe_contains}
\alias{observe_starts_with}
\alias{observe_ends_with}
\alias{observe_one_of}
\title{Select helpers}
\usage{
observe_contains(match, handlerExpr, input, ignore.case = TRUE)

observe_starts_with(match, handlerExpr, input, ignore.case = TRUE)

observe_ends_with(match, handlerExpr, input, ignore.case = TRUE)

observe_one_of(elements, handlerExpr, input, ignore.case = TRUE)
}
\arguments{
\item{match}{character}

\item{handlerExpr}{The expression to call whenever \code{eventExpr} is
invalidated. This should be a side-effect-producing action (the return
value will be ignored). It will be executed within an \code{\link[=isolate]{isolate()}}
scope.}

\item{input}{reactive object to observe}

\item{ignore.case}{logical If TRUE ignores case when matching names, Default: TRUE}

\item{elements}{character vector contains names of elements in the reactive object}
}
\value{
observer reference class object
}
\description{
These functions allow you to observe multiple reactive elements based on their names
}
\details{
The
}
\examples{
\dontrun{
if(interactive()){
 shiny::runApp(system.file('app.R',package = 'shinyselect'))
 }
}
}
