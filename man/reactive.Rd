% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reactive.R
\name{reactive_contains}
\alias{reactive_contains}
\alias{reactive_starts_with}
\alias{reactive_ends_with}
\alias{reactive_one_of}
\title{Select helpers}
\usage{
reactive_contains(match, valueExpr, input, ignore.case = TRUE)

reactive_starts_with(match, valueExpr, input, ignore.case = TRUE)

reactive_ends_with(match, valueExpr, input, ignore.case = TRUE)

reactive_one_of(elements, valueExpr, input, ignore.case = TRUE)
}
\arguments{
\item{match}{character}

\item{valueExpr}{The expression that produces the return value of the
\code{eventReactive}. It will be executed within an \code{\link[=isolate]{isolate()}}
scope.}

\item{input}{reactive object}

\item{ignore.case}{logical If TRUE ignores case when matching names, Default: TRUE}

\item{elements}{character vector contains names of elements in the reactive object}
}
\value{
observer reference class object
}
\description{
These functions allow you to reactive multiple reactive elements based on their names
}
\details{
The internal \link[shiny:eventReactive]{shiny::eventReactive} is passed a variable \code{var_}
that contains the matched element name in the reactive object input. That variable
can be defined as a paramter of valueExpr.
}
\examples{
\dontrun{
if(interactive()){
ui <- shiny::fluidPage(
  shiny::column(width = 6,
     lapply(1:4,FUN = function(x){
       shiny::actionButton(inputId = sprintf('btn_\%02d',x),label = 'update')
     })
                )
)

server <- shiny::shinyServer(function(input, output,session) {

  out <- shinyselect::reactive_one_of(c('btn_01','btn_03'),
  valueExpr = function(var_){
    runif(as.numeric(gsub('[^0-9]','',var_)))
  },input)

  shinyselect::observe_contains(match = 'btn_0(1|3)',
                              handlerExpr = function(var_){
                                print(out()[[var_]]())
                                },
                              input = out()
                              )

})

shiny::shinyApp(ui = ui, server = server)
}
}
}
